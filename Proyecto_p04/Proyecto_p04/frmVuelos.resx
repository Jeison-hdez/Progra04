<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>